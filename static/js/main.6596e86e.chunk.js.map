{"version":3,"sources":["Header.js","Movie.js","HomePage.js","Session.js","Days.js","Seats.js","Success.js","index.js"],"names":["Header","class","Movie","movie","data","url","id","to","src","posterURL","HomePage","useState","movies","setMovies","useEffect","axios","get","then","resposta","map","item","Session","session","selectData","showTimes","showtimes","weekday","date","time","onClick","name","Days","props","days","setDays","params","useParams","idMovie","sessions","day","title","Seats","selectSeat","isSelected","setName","setCpf","sendData","seats","setSeats","idSession","seatsList","seat","isAvailable","type","placeholder","onChange","e","target","value","Success","cpf","order","App","setOrder","setData","selectedSeat","find","option","path","exact","newArray","filter","idArray","forEach","element","push","ids","post","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.6596e86e.chunk.js","sourcesContent":["export default function Header() {\r\n    return (\r\n        <div class=\"header\">\r\n            <h1>CINEFLEX</h1>\r\n        </div>\r\n    );\r\n}","import { Link } from \"react-router-dom\";\r\n\r\nexport default function Movie(movie) {\r\n  const { data } = movie;\r\n  const url = `/sessoes/${data.id}`;\r\n  return (\r\n    <Link to={url} class=\"movie\">\r\n        <img src={data.posterURL} />\r\n    </Link>\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport Movie from \"./Movie\";\r\nimport axios from 'axios';\r\n\r\nexport default function HomePage() {\r\n    const [movies, setMovies] = useState([]);\r\n\r\n    useEffect(() => {\r\n\t\tconst requisicao = axios.get(\"https://mock-api.bootcamp.respondeai.com.br/api/v2/cineflex/movies\");\r\n\r\n\t\trequisicao.then(resposta => {\r\n\t\t\tsetMovies(resposta.data);\r\n\t\t});\r\n\t}, []);\r\n\r\n  return (\r\n    <>\r\n      <div class=\"page-title\">Selecione o filme</div>\r\n      <div class=\"movies-list\">\r\n        {movies.map((item) => (\r\n          <Movie data={item} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\n\r\nexport default function Session(session) {\r\n  const { data, selectData, movie } = session;\r\n  const showTimes = data.showtimes;\r\n  return (\r\n    <>\r\n      <div class=\"day\">\r\n        {data.weekday} - {data.date}\r\n      </div>\r\n      <div class=\"times\">\r\n        {showTimes.map((time) => (\r\n          <Link to={`/assentos/${time.id}`} class=\"time\" onClick={() => selectData(movie, data.date, time.name)}>\r\n            {time.name}\r\n          </Link>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport Session from \"./Session\";\r\n\r\nexport default function Days(props) {\r\n  const { selectData } = props;\r\n  const [days, setDays] = useState({days:[]});\r\n  const params = useParams();\r\n  const url = `https://mock-api.bootcamp.respondeai.com.br/api/v2/cineflex/movies/${params.idMovie}/showtimes`;\r\n  const sessions = days.days;\r\n\r\n  useEffect(() => {\r\n    const requisicao = axios.get(url);\r\n\r\n    requisicao.then((resposta) => {\r\n      setDays(resposta.data);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div class=\"page-title\">Selecione o hor√°rio</div>\r\n      <div class=\"sessions\">\r\n        {sessions.map((day) => (\r\n          <Session data={day} selectData={selectData} movie={days.title} />\r\n        ))}\r\n      </div>\r\n      <div class=\"footer\">\r\n        <div class=\"box-image\"><img src={days.posterURL} /></div>\r\n        <div class=\"title\">{days.title}</div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Seats(props) {\r\n  const { selectSeat, isSelected, setName, setCpf, sendData } = props;\r\n  const [seats, setSeats] = useState({\r\n    name: \"\",\r\n    day: { weekday: \"\" },\r\n    seats: [],\r\n    movie: { posterURL: \"\" },\r\n  });\r\n  const params = useParams();\r\n  const url = `https://mock-api.bootcamp.respondeai.com.br/api/v2/cineflex/showtimes/${params.idSession}/seats`;\r\n  const seatsList = seats.seats;\r\n  //   const [selected, setSelected] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const requisicao = axios.get(url);\r\n\r\n    requisicao.then((resposta) => {\r\n      setSeats(resposta.data);\r\n    });\r\n  }, []);\r\n\r\n  //   function selectSeat(selectedSeat) {\r\n  //     if (!selectedSeat.isAvailable) {\r\n  //       return;\r\n  //     }\r\n\r\n  //     if (isSelected(selectedSeat)) {\r\n  //       const novoArray = selected.filter((option) => option != selectedSeat);\r\n  //       setSelected(novoArray);\r\n  //     } else {\r\n  //       setSelected([...selected, selectedSeat]);\r\n  //     }\r\n  //   }\r\n\r\n  //   function isSelected(selectedSeat) {\r\n  //     return selected.find((option) => option === selectedSeat);\r\n  //   }\r\n\r\n  return (\r\n    <>\r\n      <div class=\"page-title\">Selecione o(s) assento(s)</div>\r\n      <div class=\"seats\">\r\n        {seatsList.map((seat) => (\r\n          <div\r\n            class={\r\n              seat.isAvailable\r\n                ? isSelected(seat)\r\n                  ? \"seat selected-seat\"\r\n                  : \"seat\"\r\n                : \"seat unavaible-seat\"\r\n            }\r\n            onClick={() => selectSeat(seat)}\r\n          >\r\n            {seat.name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div class=\"examples\">\r\n        <div class=\"example\">\r\n          <div class=\"seat selected-seat\"></div>\r\n          <h3>Selecionado</h3>\r\n        </div>\r\n        <div class=\"example\">\r\n          <div class=\"seat\"></div>\r\n          <h3>Dispon√≠vel</h3>\r\n        </div>\r\n        <div class=\"example\">\r\n          <div class=\"seat unavaible-seat\"></div>\r\n          <h3>Indispon√≠vel</h3>\r\n        </div>\r\n      </div>\r\n      <div class=\"data\">\r\n        <h2>Nome do comprador:</h2>\r\n        <input type=\"text\" placeholder=\"Digite seu nome...\" onChange={e => setName(e.target.value)}/>\r\n        <h2>CPF do comprador:</h2>\r\n        <input type=\"text\" placeholder=\"Digite seu CPF...\" onChange={e => setCpf(e.target.value)}/>\r\n      </div>\r\n      <Link to=\"/sucesso\" class=\"booking\" onClick={sendData}>\r\n        Reservar assento(s)\r\n      </Link>\r\n      <div class=\"footer\">\r\n        <div class=\"box-image\">\r\n          <img src={seats.movie.posterURL} />\r\n        </div>\r\n        <div class=\"title\">\r\n          {seats.movie.title}\r\n          <br />\r\n          {seats.day.weekday} - {seats.name}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import { Link } from \"react-router-dom\";\r\n\r\nexport default function Success(props) {\r\n  const { name, cpf, order, data } = props;\r\n\r\n  return (\r\n    <>\r\n      <div class=\"page-title success\">\r\n        Pedido feito <br /> com sucesso!\r\n      </div>\r\n      <div class=\"confirm\">\r\n        <strong>Filme e sessao</strong>\r\n        <div class=\"title\">{data.movie}</div>\r\n        <div class=\"title\">{data.date} - {data.time}</div>\r\n        <strong>Ingressos</strong>\r\n        {order.map((item) => <div class=\"title\">Assento {item.name}</div>)}\r\n        <strong>Comprador</strong>\r\n        <div class=\"title\">Nome: {name}</div>\r\n        <div class=\"title\">CPF: {cpf}</div>\r\n      </div>\r\n      <Link to=\"/\" class=\"booking\">Voltar pra home</Link>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Header from \"./Header\";\r\nimport HomePage from \"./HomePage\";\r\nimport Days from \"./Days\";\r\nimport Seats from \"./Seats\";\r\nimport Success from \"./Success\";\r\nimport axios from \"axios\";\r\n\r\nfunction App() {\r\n  const [order, setOrder] = useState([]);\r\n  const [data, setData] = useState({ movie: \"\", date: \"\", time: \"\" });\r\n  const [name, setName] = useState(\"\");\r\n  const [cpf, setCpf] = useState(\"\");\r\n\r\n  function sendData() {\r\n      const idArray = [];\r\n      order.forEach((element) => {idArray.push(element.id)});\r\n      const params = {ids: idArray, name: name, cpf: cpf};\r\n      const url = \"https://mock-api.bootcamp.respondeai.com.br/api/v2/cineflex/seats/book-many\";\r\n      axios.post(url, params);\r\n  }\r\n\r\n  function selectData(movie, date, time) {\r\n    data.movie = movie;\r\n    data.date = date;\r\n    data.time = time;\r\n    setData(data);\r\n  }\r\n\r\n  function selectSeat(selectedSeat) {\r\n    if (!selectedSeat.isAvailable) {\r\n      return;\r\n    }\r\n\r\n    if (isSelected(selectedSeat)) {\r\n      const newArray = order.filter((option) => option !== selectedSeat);\r\n      setOrder(newArray);\r\n    } else {\r\n      setOrder([...order, selectedSeat]);\r\n    }\r\n  }\r\n\r\n  function isSelected(selectedSeat) {\r\n    return order.find((option) => option === selectedSeat);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <HomePage />\r\n          </Route>\r\n          <Route path=\"/sessoes/:idMovie\" exact>\r\n            <Days selectData={selectData} />\r\n          </Route>\r\n          <Route path=\"/assentos/:idSession\" exact>\r\n            <Seats\r\n              selectSeat={selectSeat}\r\n              isSelected={isSelected}\r\n              setName={setName}\r\n              setCpf={setCpf}\r\n              sendData={sendData}\r\n            />\r\n          </Route>\r\n          <Route path=\"/sucesso\" exact>\r\n            <Success name={name} cpf={cpf} order={order} data={data} />\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n}\r\n\r\nReactDOM.render(<App />, document.querySelector(\".root\"));\r\n"],"sourceRoot":""}